name: Convert IMG to LXC Template (pve)

on:
  workflow_dispatch:
    inputs:
      img_url:
        description: 'IMG下载地址'
        required: true
      tar_name:
        description: 'CT模版文件名称'
        required: true

jobs:
  convert:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3

    - name: Install required packages
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-utils lxc rsync tar

    - name: Download the .img file
      run: |
        mkdir -p ./workspace && cd ./workspace
        wget "${{ github.event.inputs.img_url }}" -O system.img.gz
        # Ensure the download succeeded
        if [ ! -f system.img.gz ]; then
          echo "Download failed!"
          exit 1
        fi
        # Extract the .img.gz to .img
        zcat system.img.gz > system.img || true
        if [ ! -f system.img ]; then
          echo "Extraction of .img failed!"
          exit 1
        fi

    - name: Convert .img to LXC template
      run: |
        # Mount the .img file
        sudo mkdir /mnt/img
        sudo modprobe nbd max_part=8
        sudo qemu-nbd -f raw --connect=/dev/nbd0 ./workspace/system.img
        sudo partprobe /dev/nbd0
        
        # Automatically detect the root partition (ext4 file system)
        ROOT_PART=$(lsblk -o NAME,FSTYPE,SIZE,LABEL,MOUNTPOINT | grep 'ext4' | awk '{print $1}' | head -n 1)
        if [ -z "$ROOT_PART" ]; then
          echo "No ext4 partition found in the image!"
          sudo qemu-nbd --disconnect /dev/nbd0
          exit 1
        fi
        
        # Mount the detected partition
        sudo mount /dev/$ROOT_PART /mnt/img

        # Create LXC container rootfs directory
        sudo mkdir -p /var/lib/lxc/container/rootfs
        
        # Copy the image content into the LXC container rootfs
        sudo rsync -a /mnt/img/ /var/lib/lxc/container/rootfs/
        
        # Create basic LXC config file
        sudo tee /var/lib/lxc/container/config <<EOL
                lxc.uts.name = ${{ github.event.inputs.tar_name }}
                lxc.tty.max = 4
                lxc.autodev = 1
                lxc.pty.max = 1024
                lxc.start.auto = 0
                lxc.mount.auto = proc:rw sys:rw
        EOL

    - name: Pack the LXC template into a tar.gz
      run: |
        sudo tar -czvf "/var/lib/lxc/${{ github.event.inputs.tar_name }}.tar.gz" -C /var/lib/lxc container/
        sudo mv "/var/lib/lxc/${{ github.event.inputs.tar_name }}.tar.gz" $GITHUB_WORKSPACE

    - name: Cleanup
      run: |
        # Unmount the mounted image and cleanup
        sudo umount /mnt/img || echo "Unmount failed!"
        sudo qemu-nbd --disconnect /dev/nbd0 || echo "Disconnect NBD failed!"
        sudo rmdir /mnt/img || echo "Directory removal failed!"

    - name: Upload LXC template artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ github.event.inputs.tar_name }}
        path: "${{ github.event.inputs.tar_name }}.tar.gz"
